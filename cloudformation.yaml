AWSTemplateFormatVersion: 2010-09-09

Description: This Cloudformation Template creates an EC2 Instance, downloads the Flask app from S3, and runs it.

Parameters:
  KeyPairName:
    Description: Enter the name of your Key Pair for SSH connections.
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: Must be one of the existing EC2 KeyPair
  S3BucketName:
    Description: The S3 bucket where the Flask app zip is stored.
    Type: String
  S3ObjectKey:
    Description: The S3 object key (path) for the Flask app zip.
    Type: String

Resources:
  WebAPISecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP and SSH for Bookstore Web API
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  WebAPIEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-09d95fab7fff3776c # Ensure this is the latest Amazon Linux 2 LTS AMI
      InstanceType: t2.micro
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !GetAtt WebAPISecurityGroup.GroupId
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash
            yum update -y
            amazon-linux-extras install -y epel
            yum install -y python3 python3-pip unzip aws-cli
            pip3 install Flask
            aws s3 cp s3://${S3BucketName}/${S3ObjectKey} /home/ec2-user/bookstore-api.zip
            unzip /home/ec2-user/bookstore-api.zip -d /home/ec2-user/
            nohup python3 /home/ec2-user/bookstore-api/app.py &

Outputs:
  WebsiteURL:
    Description: Bookstore Web API URL
    Value:
      !Sub
        - http://${PublicAddress}
        - PublicAddress: !GetAtt WebAPIEC2Instance.PublicDnsName
